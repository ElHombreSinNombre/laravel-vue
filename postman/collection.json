{
	"info": {
		"_postman_id": "c2280c1c-13fb-4afd-8e1d-78d0338d3f0d",
		"name": "Laravel Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"XSRF is present\", function () {\r",
							"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept-Charset",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Admin\",\r\n    \"password\":\"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_domain}}/login",
					"host": [
						"{{url_domain}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			
			"name": "People",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"firstPeople\", response[0]['id']);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_domain}}/:elements",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements"
							],
							"variable": [
								{
									"key": "elements",
									"value": "people"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_domain}}/:elements?id={{firstPeople}}",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements"
							],
							"query": [
								{
									"key": "id",
									"value": "{{firstPeople}}"
								}
							],
							"variable": [
								{
									"key": "elements",
									"value": "people"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch / Put",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let id = pm.collectionVariables.get('firstPeople');\r",
									"\r",
									"pm.sendRequest({\r",
									"    url:'http://laravelvue.com/people/'+id+'/edit/', \r",
									"    method:'GET',\r",
									"    header: {\r",
									"        'X-Requested-With': 'XMLHttpRequest',\r",
									"    },\r",
									"}, function (err, response) {\r",
									"    let data = response.json();\r",
									"    pm.collectionVariables.set(\"dropdownCar\", data[0]['id']);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{randomNum}}",
									"type": "text"
								},
								{
									"key": "dni",
									"value": "7240826{{randomNumOne}}N",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "id_car",
									"value": "{{dropdownCar}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url_domain}}/:elements/:id?_method=PATCH",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements",
								":id"
							],
							"query": [
								{
									"key": "_method",
									"value": "PATCH"
								}
							],
							"variable": [
								{
									"key": "elements",
									"value": "people"
								},
								{
									"key": "id",
									"value": "{{firstPeople}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url_domain}}/:elements/:id",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements",
								":id"
							],
							"variable": [
								{
									"key": "elements",
									"value": "people"
								},
								{
									"key": "id",
									"value": "{{firstPeople}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url:'http://laravelvue.com/people/create/',\r",
									"    method:'GET',\r",
									"      header: {\r",
									"        'X-Requested-With': 'XMLHttpRequest',\r",
									"    },\r",
									"},function(error, response){\r",
									"    let data = response.json();\r",
									"    pm.collectionVariables.set(\"dropdownCar\", data[0]['id']);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "u",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{randomNum}}",
									"type": "text"
								},
								{
									"key": "dni",
									"value": "7240826{{randomNumOne}}N",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "id_car",
									"value": "{{dropdownCar}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url_domain}}/:elements",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements"
							],
							"variable": [
								{
									"key": "elements",
									"value": "people"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cars",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"firstCar\", response[0]['id']);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_domain}}/:elements",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements"
							],
							"variable": [
								{
									"key": "elements",
									"value": "cars"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_domain}}/:elements?id={{firstCar}}",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements"
							],
							"query": [
								{
									"key": "id",
									"value": "{{firstCar}}"
								}
							],
							"variable": [
								{
									"key": "elements",
									"value": "cars"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "model",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "brand",
									"value": "{{$randomDomainWord}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "{{$randomHexColor}}",
									"type": "text"
								},
								{
									"key": "license",
									"value": "576781{{randomNumOne}}",
									"type": "text"
								},
								{
									"key": "image",
									"value": "{{$randomImageDataUri}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url_domain}}/:elements",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements"
							],
							"variable": [
								{
									"key": "elements",
									"value": "cars"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch / Put",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "model",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "brand",
									"value": "{{$randomDomainWord}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "{{$randomHexColor}}",
									"type": "text"
								},
								{
									"key": "license",
									"value": "{{randomNumOne}}797500",
									"type": "text"
								},
								{
									"key": "image",
									"value": "{{$randomImageDataUri}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url_domain}}/:elements/:id?_method=PATCH",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements",
								":id"
							],
							"query": [
								{
									"key": "_method",
									"value": "PATCH"
								}
							],
							"variable": [
								{
									"key": "elements",
									"value": "cars"
								},
								{
									"key": "id",
									"value": "{{firstCar}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"XSRF is present\", function () {\r",
									"    pm.request.to.have.header(\"X-XSRF-TOKEN\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url_domain}}/:elements/:id",
							"host": [
								"{{url_domain}}"
							],
							"path": [
								":elements",
								":id"
							],
							"variable": [
								{
									"key": "elements",
									"value": "cars"
								},
								{
									"key": "id",
									"value": "{{firstCar}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}	
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{X-XSRF-TOKEN}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-XSRF-TOKEN",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({key: 'Content-Type', value: 'application/json' })",
					"pm.request.headers.add({key: 'X-Requested-With', value: 'XMLHttpRequest' })",
					"",
					"pm.collectionVariables.set (\"randomNum\", _.random (18,99));",
					"",
					"pm.collectionVariables.set (\"randomNumOne\", _.random (1,9));",
					"",
					"pm.sendRequest({",
					"    url:'http://laravelvue.com/sanctum/csrf-cookie',",
					"    method:'GET'",
					"},function(error, response, {cookies}){",
					"        if(!error){",
					"            pm.collectionVariables.set('X-XSRF-TOKEN', cookies.get('XSRF-TOKEN'))",
					"        }",
					"    }",
					")"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "X-XSRF-TOKEN",
			"value": ""
		},
		{
			"key": "firstCar",
			"value": ""
		},
		{
			"key": "firstPeople",
			"value": ""
		},
		{
			"key": "dropdownCar",
			"value": ""
		},
		{
			"key": "randomNum",
			"value": ""
		},
		{
			"key": "getID",
			"value": ""
		},
		{
			"key": "randomNumOne",
			"value": ""
		}
	]
}